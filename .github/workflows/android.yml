name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Spotless check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.2.1
      - name: Set up JDK
        uses: actions/setup-java@v4.4.0
        with:
          distribution: adopt
          java-version: 17
      - name: Make Gradle executable
        run: chmod +x ./gradlew
      - name: spotless
        run: ./gradlew spotlessCheck

  detekt:
    name: Detekt check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.2.1
      - name: Set up JDK
        uses: actions/setup-java@v4.4.0
        with:
          distribution: adopt
          java-version: 17
      - name: Make Gradle executable
        run: chmod +x ./gradlew
      - name: detekt
        run: ./gradlew detekt

  build:
    name: Build, Tests, Codecov & Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      - uses: gradle/actions/setup-gradle@v4
      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew app:koverXmlReport

      - name: Verify coverage
        run: ./gradlew app:koverVerify

      - name: Upload reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Decode Keystore
        env:
         ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
         RELEASE_KEYSTORE_PATH: ${{ secrets.RELEASE_KEYSTORE_PATH }}

        run: |
          echo $ENCODED_STRING | base64 -di > $RELEASE_KEYSTORE_PATH

      - name: Build Release apk
        env:
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        run: |
          ls ${{ github.workspace }}
          touch local.properties
          echo -e "\nRELEASE_KEY_ALIAS=$RELEASE_KEY_ALIAS" >> local.properties
          echo -e "\nRELEASE_KEY_PASSWORD=$RELEASE_KEY_PASSWORD" >> local.properties
          echo -e "\nRELEASE_KEYSTORE_PASSWORD=$RELEASE_KEYSTORE_PASSWORD" >> local.properties
          cat local.properties
          ./gradlew assembleRelease

      - name: Build Release bundle
        env:
          RELEASE_KEYSTORE_PATH: ${{ secrets.RELEASE_KEYSTORE_PATH }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        run: ./gradlew bundleRelease

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          paths: |
            app/build/outputs/apk/release/
            app/build/outputs/bundle/release/

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          prerelease: true
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/bundle/release/app-release.aab


