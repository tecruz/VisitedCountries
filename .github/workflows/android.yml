name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Spotless check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.2.1
      - name: Set up JDK
        uses: actions/setup-java@v4.4.0
        with:
          distribution: adopt
          java-version: 17
      - name: Make Gradle executable
        run: chmod +x ./gradlew
      - name: spotless
        run: ./gradlew spotlessCheck

  detekt:
    name: Detekt check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4.2.1
      - name: Set up JDK
        uses: actions/setup-java@v4.4.0
        with:
          distribution: adopt
          java-version: 17
      - name: Make Gradle executable
        run: chmod +x ./gradlew
      - name: detekt
        run: ./gradlew detekt

  build:
    name: Build, Tests, Codecov & Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      - uses: gradle/actions/setup-gradle@v4
      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew app:koverXmlReport

      - name: Verify coverage
        run: ./gradlew app:koverVerify

      - name: Upload reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build prodRelease
        run: ./gradlew bundleRelease

      - name: Sign AAb
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: '${{ secrets.RELEASE_KEYSTORE_PATH }}'
          alias: '${{ secrets.RELEASE_KEY_ALIAS }}'
          keyStorePassword: '${{ secrets.RELEASE_KEY_PASSWORD }}'
          keyPassword: '${{ secrets.RELEASE_KEYSTORE_PASSWORD }}'

      - name: Upload app bundle as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-bundle
          path: app/build/outputs/bundle/release/app-release.aab
      - run: 'echo Build status report=${{ job.status }}'


